// Generated by delombok at Tue Aug 20 14:53:27 EDT 2024
/*
 * Table Wrapper API
 * Copyright (C) 2020  Spacious Team <spacious-team@ya.ru>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */
package org.spacious_team.table_wrapper.api;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public class TableCellAddress {

    public static final @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull TableCellAddress NOT_FOUND = new TableCellAddress(-1, -1);

    private final int row;

    private final int column;

    @org.checkerframework.dataflow.qual.Pure
    public int getRow() {
        return this.row;
    }

    @org.checkerframework.dataflow.qual.Pure
    public int getColumn() {
        return this.column;
    }

    @org.checkerframework.dataflow.qual.Pure
    public boolean equals(final java.lang.Object o) {
        if (o == this)
            return true;
        if (!(o instanceof TableCellAddress))
            return false;
        final TableCellAddress other = (TableCellAddress) o;
        if (!other.canEqual((java.lang.Object) this))
            return false;
        if (this.getRow() != other.getRow())
            return false;
        if (this.getColumn() != other.getColumn())
            return false;
        return true;
    }

    @org.checkerframework.dataflow.qual.Pure
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof TableCellAddress;
    }

    @org.checkerframework.dataflow.qual.Pure
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + this.getRow();
        result = result * PRIME + this.getColumn();
        return result;
    }

    @org.checkerframework.dataflow.qual.Pure
    public java.lang.String toString() {
        return "TableCellAddress(row=" + this.getRow() + ", column=" + this.getColumn() + ")";
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public TableCellAddress(final  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int row, final  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int column) {
        this.row = row;
        this.column = column;
    }
}
