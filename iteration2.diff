diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvCellDataAccessObject-org.checkerframework.checker.nullness.KeyForSubchecker.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvCellDataAccessObject-org.checkerframework.checker.nullness.KeyForSubchecker.ajava 42c42 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.SideEffectFree diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvCellDataAccessObject-org.checkerframework.checker.nullness.NullnessChecker.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvCellDataAccessObject-org.checkerframework.checker.nullness.NullnessChecker.ajava 42c42 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.SideEffectFree diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvCellDataAccessObject.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvCellDataAccessObject.ajava 1d0 < // Generated by delombok at Mon Aug 26 04:09:54 EDT 2024 21c20 < import javax.annotation.Nullable; --- > import org.checkerframework.checker.nullness.qual.Nullable; 27c26 < import java.time.ZoneOffset; --- > import java.time.ZoneId; 28a28 > import java.util.Objects; 34c34,38 < public static DateTimeFormatter dateTimeFormatter = null; --- > /Applications /Library /System /Users /Volumes /bin /cores /dev /etc /home /opt /private /sbin /tmp /usr /var > LICENSE README.md build cf_srcs.txt iteration1.diff iteration2.diff iteration3.diff iteration4.diff iteration5.diff jitpack.yml lib mvnw mvnw.cmd pom.xml postCheck.out preCheck.out removeAnnotations.py src srcOld srcWrong typecheck.out wpi-iterations wpi-log.txt wpi-out wpi-out-java wpi.sh If null, date time format is derived from value > build/ lib/ src/ srcOld/ srcWrong/ wpi-iterations/ wpi-out-java/ wpi-out/ > @Nullable > private final DateTimeFormatter dateTimeFormatter; 35a40,52 > @Nullable > private final ZoneId defaultZone; > > public CsvCellDataAccessObject() { > this(null, null); > } > > public CsvCellDataAccessObject(@Nullable DateTimeFormatter dateTimeFormatter, @Nullable ZoneId defaultZone) { > this.dateTimeFormatter = dateTimeFormatter; > this.defaultZone = defaultZone; > } > > @Nullable 38c55,56 < return row.getCell(cellIndex).getRowAndIndex(); --- > CsvTableCell cell = row.getCell(cellIndex); > return (cell == null) ? null : cell.getRowAndIndex(); 40a59 > @Nullable 48a68 > Objects.requireNonNull(value, "Not an instant"); 50,59c70,72 < LocalDateTime dateTime = (value.length() == 10) ? LocalDate.parse(value, formatter).atTime(12, 0) : LocalDateTime.parse(value, formatter); < return dateTime.atZone(ZoneOffset.systemDefault()).toInstant(); < } < < public static void setDateTimeFormatter(final DateTimeFormatter dateTimeFormatter) { < CsvCellDataAccessObject.dateTimeFormatter = dateTimeFormatter; < } < < public static DateTimeFormatter getDateTimeFormatter() { < return CsvCellDataAccessObject.dateTimeFormatter; --- > LocalDateTime dateTime = (value.length() == 10) ? //TODO formatter can parse time and zone > LocalDate.parse(value, formatter).atTime(12, 0) : LocalDateTime.parse(value, formatter); > return dateTime.atZone(defaultZone == null ? ZoneId.systemDefault() : defaultZone).toInstant(); diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvReportPage.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvReportPage.ajava 20d19 < import javax.annotation.Nullable; 22a22 > import org.checkerframework.checker.nullness.qual.Nullable; 76a77 > @Nullable diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvTable-org.checkerframework.checker.nullness.KeyForSubchecker.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvTable-org.checkerframework.checker.nullness.KeyForSubchecker.ajava 48c48 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvTable-org.checkerframework.checker.nullness.NullnessChecker.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvTable-org.checkerframework.checker.nullness.NullnessChecker.ajava 48c48 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvTable.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvTable.ajava 1c1 < // Generated by delombok at Mon Aug 26 04:09:54 EDT 2024 --- > // Generated by delombok at Fri Sep 06 23:47:09 EDT 2024 21d20 < import javax.annotation.Nullable; 27c26 < import org.spacious_team.table_wrapper.api.TableColumnDescription; --- > import org.spacious_team.table_wrapper.api.TableHeaderColumn; 31c30 < private final CellDataAccessObject<?, CsvTableRow> cellDataAccessObject = CsvCellDataAccessObject.INSTANCE; --- > private CellDataAccessObject<?, CsvTableRow> cellDataAccessObject = CsvCellDataAccessObject.INSTANCE; 33c32 < protected CsvTable(AbstractReportPage<CsvTableRow> reportPage, String tableName, TableCellRange tableRange, Class<? extends TableColumnDescription> headerDescription, int headersRowCount) { --- > protected <T extends Enum<T> & TableHeaderColumn> CsvTable(AbstractReportPage<CsvTableRow> reportPage, String tableName, TableCellRange tableRange, Class<T> headerDescription, int headersRowCount) { 48a48,51 > } > > public void setCellDataAccessObject(final CellDataAccessObject<?, CsvTableRow> cellDataAccessObject) { > this.cellDataAccessObject = cellDataAccessObject; diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvTableCell-org.checkerframework.checker.nullness.KeyForSubchecker.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvTableCell-org.checkerframework.checker.nullness.KeyForSubchecker.ajava 52c52 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure 63c63 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure 101c101 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure 122c122 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvTableCell-org.checkerframework.checker.nullness.NullnessChecker.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvTableCell-org.checkerframework.checker.nullness.NullnessChecker.ajava 52c52 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure 63c63 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure 101c101 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure 122c122 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvTableCell.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvTableCell.ajava 1c1 < // Generated by delombok at Mon Aug 26 04:09:54 EDT 2024 --- > // Generated by delombok at Fri Sep 06 23:47:09 EDT 2024 21c21 < import javax.annotation.Nullable; --- > import org.checkerframework.checker.nullness.qual.Nullable; 33a34,37 > public static CsvTableCell of(String[] row, int columnIndex, CsvCellDataAccessObject dao) { > return new CsvTableCell(new RowAndIndex(row, columnIndex), dao); > } > 35c39,43 < super(rowAndIndex, CsvCellDataAccessObject.INSTANCE); --- > this(rowAndIndex, CsvCellDataAccessObject.INSTANCE); > } > > public CsvTableCell(RowAndIndex rowAndIndex, CsvCellDataAccessObject dao) { > super(rowAndIndex, dao); 49a58 > @Nullable diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvTableFactory.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvTableFactory.ajava 20d19 < import javax.annotation.Nullable; 25c24 < import org.spacious_team.table_wrapper.api.TableColumnDescription; --- > import org.spacious_team.table_wrapper.api.TableHeaderColumn; 34c33 < public Table create(ReportPage reportPage, String tableName, TableCellRange tableRange, Class<? extends TableColumnDescription> headerDescription, int headersRowCount) { --- > public <T extends Enum<T> & TableHeaderColumn> Table create(ReportPage reportPage, String tableName, TableCellRange tableRange, Class<T> headerDescription, int headersRowCount) { diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvTableHelper.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvTableHelper.ajava 0a1 > // Generated by delombok at Fri Sep 06 23:47:09 EDT 2024 20d20 < import javax.annotation.Nullable; 23a24 > import static lombok.AccessLevel.PRIVATE; 26c27 < class CsvTableHelper { --- > final class CsvTableHelper { 51c52 < return new TableCellAddress(rowNum, i); --- > return TableCellAddress.of(rowNum, i); 62a64,66 > } > > private CsvTableHelper() { diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvTableRow-org.checkerframework.checker.nullness.KeyForSubchecker.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvTableRow-org.checkerframework.checker.nullness.KeyForSubchecker.ajava 92c92 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure 113c113 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvTableRow-org.checkerframework.checker.nullness.NullnessChecker.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvTableRow-org.checkerframework.checker.nullness.NullnessChecker.ajava 92c92 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure 113c113 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvTableRow.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvTableRow.ajava 1c1 < // Generated by delombok at Mon Aug 26 04:09:54 EDT 2024 --- > // Generated by delombok at Fri Sep 06 23:47:09 EDT 2024 21c21 < import javax.annotation.Nullable; --- > import org.checkerframework.checker.nullness.qual.Nullable; 24a25 > import java.util.NoSuchElementException; 41a43 > @Nullable 72c74 < return new Iterator<>() { --- > return new Iterator<TableCell>() { 80a83 > @Nullable 83c86,89 < return getCell(cellIndex++); --- > if (hasNext()) { > return getCell(cellIndex++); > } > throw new NoSuchElementException(); 85a92,120 > } > > @java.lang.Override > public boolean equals(final java.lang.Object o) { > if (o == this) > return true; > if (!(o instanceof CsvTableRow)) > return false; > final CsvTableRow other = (CsvTableRow) o; > if (!other.canEqual((java.lang.Object) this)) > return false; > if (this.getRowNum() != other.getRowNum()) > return false; > if (!java.util.Arrays.deepEquals(this.row, other.row)) > return false; > return true; > } > > protected boolean canEqual(final java.lang.Object other) { > return other instanceof CsvTableRow; > } > > @java.lang.Override > public int hashCode() { > final int PRIME = 59; > int result = 1; > result = result LICENSE README.md build cf_srcs.txt iteration1.diff iteration2.diff iteration3.diff iteration4.diff iteration5.diff jitpack.yml lib mvnw mvnw.cmd pom.xml postCheck.out preCheck.out removeAnnotations.py src srcOld srcWrong typecheck.out wpi-iterations wpi-log.txt wpi-out wpi-out-java wpi.sh PRIME + this.getRowNum(); > result = result LICENSE README.md build cf_srcs.txt iteration1.diff iteration2.diff iteration3.diff iteration4.diff iteration5.diff jitpack.yml lib mvnw mvnw.cmd pom.xml postCheck.out preCheck.out removeAnnotations.py src srcOld srcWrong typecheck.out wpi-iterations wpi-log.txt wpi-out wpi-out-java wpi.sh PRIME + java.util.Arrays.deepHashCode(this.row); > return result; diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/DateTimeFormatParser.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/DateTimeFormatParser.ajava 0a1 > // Generated by delombok at Fri Sep 06 23:47:09 EDT 2024 20c21 < import javax.annotation.Nullable; --- > import org.checkerframework.checker.nullness.qual.Nullable; 23a25 > import static lombok.AccessLevel.PRIVATE; 25c27 < class DateTimeFormatParser { --- > final class DateTimeFormatParser { 51c53,54 < boolean isDateAtFirst, isYearAtFirst; --- > boolean isDateAtFirst; > boolean isYearAtFirst; 83c86 < Integer key = dateSplitter + 0x40000 + (isYearAtFirst ? 0x20000 : 0); --- > Integer key = dateSplitter + 262144 + (isYearAtFirst ? 131072 : 0); 100c103 < Integer key = dateSplitter + (isDateAtFirst ? 0x10000 : 0) + (isYearAtFirst ? 0x20000 : 0); --- > Integer key = dateSplitter + (isDateAtFirst ? 65536 : 0) + (isYearAtFirst ? 131072 : 0); 128a132,134 > } > > private DateTimeFormatParser() {
