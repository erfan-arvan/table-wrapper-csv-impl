diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvCellDataAccessObject-org.checkerframework.checker.nullness.NullnessChecker.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvCellDataAccessObject-org.checkerframework.checker.nullness.NullnessChecker.ajava 36a37 > @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "org.spacious_team.table_wrapper.csv.CsvCellDataAccessObject.class.dateTimeFormatter" }, qualifier = org.checkerframework.checker.nullness.qual.Nullable.class) 41a43,44 > @org.checkerframework.framework.qual.RequiresQualifier(expression = { "org.spacious_team.table_wrapper.csv.CsvCellDataAccessObject.class.dateTimeFormatter" }, qualifier = org.checkerframework.checker.nullness.qual.Nullable.class) > @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "org.spacious_team.table_wrapper.csv.CsvCellDataAccessObject.class.dateTimeFormatter" }, qualifier = org.checkerframework.checker.nullness.qual.Nullable.class) 43c46 < public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String getValue(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull CsvCellDataAccessObject this, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull RowAndIndex cell) { --- > public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable String getValue(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull CsvCellDataAccessObject this, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull RowAndIndex cell) { 46a50 > @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "org.spacious_team.table_wrapper.csv.CsvCellDataAccessObject.class.dateTimeFormatter" }, qualifier = org.checkerframework.checker.nullness.qual.Nullable.class) 54a59 > @org.checkerframework.checker.nullness.qual.EnsuresNonNull({ "org.spacious_team.table_wrapper.csv.CsvCellDataAccessObject.class.dateTimeFormatter" }) 59a65 > @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "org.spacious_team.table_wrapper.csv.CsvCellDataAccessObject.class.dateTimeFormatter" }, qualifier = org.checkerframework.checker.nullness.qual.Nullable.class) 61c67 < public static @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull DateTimeFormatter getDateTimeFormatter() { --- > public static @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable DateTimeFormatter getDateTimeFormatter() { diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvCellDataAccessObject.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvCellDataAccessObject.ajava 0a1 > // Generated by delombok at Mon Aug 26 04:09:54 EDT 2024 20c21 < import org.checkerframework.checker.nullness.qual.Nullable; --- > import javax.annotation.Nullable; 26c27 < import java.time.ZoneId; --- > import java.time.ZoneOffset; 28d28 < import java.util.Objects; 34,37c34 < /Applications /Library /System /Users /Volumes /bin /cores /dev /etc /home /opt /private /sbin /tmp /usr /var < LICENSE README.md build cf_srcs.txt classpath iteration1.diff iteration2.diff iteration3.diff iteration4.diff iteration5.diff lib lombok.jar mvnw mvnw.cmd pom.xml postCheck.out preCheck.out removeAnnotations.py src srcCorrect srcOld typecheck.out wpi-iterations wpi-log.txt wpi-out wpi-out-java wpi.sh If null, date time format is derived from value < build/ classpath/ lib/ src/ srcCorrect/ srcOld/ wpi-iterations/ wpi-out-java/ wpi-out/ < private final DateTimeFormatter dateTimeFormatter; --- > public static DateTimeFormatter dateTimeFormatter = null; 39,49d35 < private final ZoneId defaultZone; < < public CsvCellDataAccessObject() { < this(null, null); < } < < public CsvCellDataAccessObject(DateTimeFormatter dateTimeFormatter, ZoneId defaultZone) { < this.dateTimeFormatter = dateTimeFormatter; < this.defaultZone = defaultZone; < } < 52,53c38 < CsvTableCell cell = row.getCell(cellIndex); < return (cell == null) ? null : cell.getRowAndIndex(); --- > return row.getCell(cellIndex).getRowAndIndex(); 64d48 < Objects.requireNonNull(value, "Not an instant"); 66,68c50,59 < LocalDateTime dateTime = (value.length() == 10) ? //TODO formatter can parse time and zone < LocalDate.parse(value, formatter).atTime(12, 0) : LocalDateTime.parse(value, formatter); < return dateTime.atZone(defaultZone == null ? ZoneId.systemDefault() : defaultZone).toInstant(); --- > LocalDateTime dateTime = (value.length() == 10) ? LocalDate.parse(value, formatter).atTime(12, 0) : LocalDateTime.parse(value, formatter); > return dateTime.atZone(ZoneOffset.systemDefault()).toInstant(); > } > > public static void setDateTimeFormatter(final DateTimeFormatter dateTimeFormatter) { > CsvCellDataAccessObject.dateTimeFormatter = dateTimeFormatter; > } > > public static DateTimeFormatter getDateTimeFormatter() { > return CsvCellDataAccessObject.dateTimeFormatter; diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvReportPage.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvReportPage.ajava 19a20 > import javax.annotation.Nullable; 22d22 < import org.checkerframework.checker.nullness.qual.Nullable; diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvTable-org.checkerframework.checker.nullness.KeyForSubchecker.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvTable-org.checkerframework.checker.nullness.KeyForSubchecker.ajava 49c49 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvTable-org.checkerframework.checker.nullness.NullnessChecker.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvTable-org.checkerframework.checker.nullness.NullnessChecker.ajava 49c49 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvTable.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvTable.ajava 1c1 < // Generated by delombok at Mon Sep 09 01:36:13 EDT 2024 --- > // Generated by delombok at Mon Aug 26 04:09:54 EDT 2024 20a21 > import javax.annotation.Nullable; 26c27 < import org.spacious_team.table_wrapper.api.TableHeaderColumn; --- > import org.spacious_team.table_wrapper.api.TableColumnDescription; 30c31 < private CellDataAccessObject<?, CsvTableRow> cellDataAccessObject = CsvCellDataAccessObject.INSTANCE; --- > private final CellDataAccessObject<?, CsvTableRow> cellDataAccessObject = CsvCellDataAccessObject.INSTANCE; 32c33 < protected <T extends Enum<T> & TableHeaderColumn> CsvTable(AbstractReportPage<CsvTableRow> reportPage, String tableName, TableCellRange tableRange, Class<T> headerDescription, int headersRowCount) { --- > protected CsvTable(AbstractReportPage<CsvTableRow> reportPage, String tableName, TableCellRange tableRange, Class<? extends TableColumnDescription> headerDescription, int headersRowCount) { 48,51d48 < } < < public void setCellDataAccessObject(final CellDataAccessObject<?, CsvTableRow> cellDataAccessObject) { < this.cellDataAccessObject = cellDataAccessObject; diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvTableCell-org.checkerframework.checker.nullness.KeyForSubchecker.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvTableCell-org.checkerframework.checker.nullness.KeyForSubchecker.ajava 42c42 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure 53c53 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure 91c91 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure 112c112 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvTableCell-org.checkerframework.checker.nullness.NullnessChecker.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvTableCell-org.checkerframework.checker.nullness.NullnessChecker.ajava 42c42 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure 53c53 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure 91c91 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure 112c112 < @org.checkerframework.dataflow.qual.Impure --- > @org.checkerframework.dataflow.qual.Pure diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvTableCell.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvTableCell.ajava 1c1 < // Generated by delombok at Mon Sep 09 01:36:13 EDT 2024 --- > // Generated by delombok at Mon Aug 26 04:09:54 EDT 2024 21c21 < import org.checkerframework.checker.nullness.qual.Nullable; --- > import javax.annotation.Nullable; 34,37d33 < public static CsvTableCell of(String[] row, int columnIndex, CsvCellDataAccessObject dao) { < return new CsvTableCell(new RowAndIndex(row, columnIndex), dao); < } < 39,43c35 < this(rowAndIndex, CsvCellDataAccessObject.INSTANCE); < } < < public CsvTableCell(RowAndIndex rowAndIndex, CsvCellDataAccessObject dao) { < super(rowAndIndex, dao); --- > super(rowAndIndex, CsvCellDataAccessObject.INSTANCE); diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvTableFactory.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvTableFactory.ajava 19a20 > import javax.annotation.Nullable; 24c25 < import org.spacious_team.table_wrapper.api.TableHeaderColumn; --- > import org.spacious_team.table_wrapper.api.TableColumnDescription; 33c34 < public <T extends Enum<T> & TableHeaderColumn> Table create(ReportPage reportPage, String tableName, TableCellRange tableRange, Class<T> headerDescription, int headersRowCount) { --- > public Table create(ReportPage reportPage, String tableName, TableCellRange tableRange, Class<? extends TableColumnDescription> headerDescription, int headersRowCount) { diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvTableHelper.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvTableHelper.ajava 1d0 < // Generated by delombok at Mon Sep 09 01:36:13 EDT 2024 20a20 > import javax.annotation.Nullable; 24d23 < import static lombok.AccessLevel.PRIVATE; 27c26 < final class CsvTableHelper { --- > class CsvTableHelper { 52c51 < return TableCellAddress.of(rowNum, i); --- > return new TableCellAddress(rowNum, i); 64,66d62 < } < < private CsvTableHelper() { diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/CsvTableRow.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/CsvTableRow.ajava 1c1 < // Generated by delombok at Mon Sep 09 01:36:13 EDT 2024 --- > // Generated by delombok at Mon Aug 26 04:09:54 EDT 2024 21c21 < import org.checkerframework.checker.nullness.qual.Nullable; --- > import javax.annotation.Nullable; 25d24 < import java.util.NoSuchElementException; 73c72 < return new Iterator<TableCell>() { --- > return new Iterator<>() { 84,87c83 < if (hasNext()) { < return getCell(cellIndex++); < } < throw new NoSuchElementException(); --- > return getCell(cellIndex++); 90,118d85 < } < < @java.lang.Override < public boolean equals(final java.lang.Object o) { < if (o == this) < return true; < if (!(o instanceof CsvTableRow)) < return false; < final CsvTableRow other = (CsvTableRow) o; < if (!other.canEqual((java.lang.Object) this)) < return false; < if (this.getRowNum() != other.getRowNum()) < return false; < if (!java.util.Arrays.deepEquals(this.row, other.row)) < return false; < return true; < } < < protected boolean canEqual(final java.lang.Object other) { < return other instanceof CsvTableRow; < } < < @java.lang.Override < public int hashCode() { < final int PRIME = 59; < int result = 1; < result = result LICENSE README.md build cf_srcs.txt classpath iteration1.diff iteration2.diff iteration3.diff iteration4.diff iteration5.diff lib lombok.jar mvnw mvnw.cmd pom.xml postCheck.out preCheck.out removeAnnotations.py src srcCorrect srcOld typecheck.out wpi-iterations wpi-log.txt wpi-out wpi-out-java wpi.sh PRIME + this.getRowNum(); < result = result LICENSE README.md build cf_srcs.txt classpath iteration1.diff iteration2.diff iteration3.diff iteration4.diff iteration5.diff lib lombok.jar mvnw mvnw.cmd pom.xml postCheck.out preCheck.out removeAnnotations.py src srcCorrect srcOld typecheck.out wpi-iterations wpi-log.txt wpi-out wpi-out-java wpi.sh PRIME + java.util.Arrays.deepHashCode(this.row); < return result; diff -r /tmp/WPITEMP-table-wrapper-csv-impl/org/spacious_team/table_wrapper/csv/DateTimeFormatParser.ajava ./build/whole-program-inference/org/spacious_team/table_wrapper/csv/DateTimeFormatParser.ajava 1d0 < // Generated by delombok at Mon Sep 09 01:36:13 EDT 2024 21c20 < import org.checkerframework.checker.nullness.qual.Nullable; --- > import javax.annotation.Nullable; 25d23 < import static lombok.AccessLevel.PRIVATE; 27c25 < final class DateTimeFormatParser { --- > class DateTimeFormatParser { 53,54c51 < boolean isDateAtFirst; < boolean isYearAtFirst; --- > boolean isDateAtFirst, isYearAtFirst; 86c83 < Integer key = dateSplitter + 262144 + (isYearAtFirst ? 131072 : 0); --- > Integer key = dateSplitter + 0x40000 + (isYearAtFirst ? 0x20000 : 0); 103c100 < Integer key = dateSplitter + (isDateAtFirst ? 65536 : 0) + (isYearAtFirst ? 131072 : 0); --- > Integer key = dateSplitter + (isDateAtFirst ? 0x10000 : 0) + (isYearAtFirst ? 0x20000 : 0); 132,134d128 < } < < private DateTimeFormatParser() {
